import sys
sys.stdin = open("jasmine.in", 'r')
sys.stdout = open("jasmine.out", 'w')


def sum1(n):
    res = 0
    s = str(n)
    for i in range(len(s)):
        res += int(s[i])
    return res


n, m = map(int, input().split())
num = [0] * (220000)
for i in range(n):
    x, y = map(int, input().split())
    for j in range(x, y + 1):
        num[j] = 1
dp = [10 ** 9] * (220000)
dp[1] = 0
for i in range(1, 202000):
    k = sum1(i)
    if num[i] == 1 and num[i + 1] == 1:
        dp[i + 1] = min(dp[i + 1], dp[i])
    if num[i] == 1 and num[i + 1] == 0:
        dp[i + 1] = min(dp[i + 1], dp[i] + 1)
    if num[i] == 1 and num[i + k] == 1:
        dp[i + k] = min(dp[i + k], dp[i])
    if num[i] == 1 and num[i + k] == 0:
        dp[i + k] = min(dp[i + k], dp[i] + 1)
    if num[i] == 0:
        u1 = i
        while u1 < len(num) and num[u1] != 1:
            u1 += 1
            #print('aaaaaaaa')
        if u1 == len(num):
            break
        u2 = u1
        while u2 < len(num) and num[u2] != 0:
            u2 += 1
            #print('bbbbbb')
        u2 -= 1
        if num[i + 1] == 0:
            dp[i + 1] = min(dp[i + 1], dp[i])
        else:
            dp[i + 1] = min(dp[i + 1], dp[i])
        if num[i + k] == 0 and i + k < u1:
            dp[i + k] = min(dp[i + k], dp[i])
        if num[i + k] == 1 and i + k <= u2:
            dp[i + k] = min(dp[i + k], dp[i])
print(dp[m])